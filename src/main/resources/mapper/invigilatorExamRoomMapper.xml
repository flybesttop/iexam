<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sot.iexam.DAO.mybatis.mapper.invigilatorExamRoomMapper">
    <resultMap id="invigilatorExamRoom" type="com.sot.iexam.DO.invigilatorExamRoom">
        <id column="id" property="id"/>
        <result column="invigilator_id" property="invigilatorId"/>
        <result column="exam_room_id" property="examRoomId"/>
        <result column="exam_id" property="examId"/>
        <result column="from_time" property="fromTime"/>
        <result column="end_time" property="endTime"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
    </resultMap>
    <insert id="insert" keyProperty="invigilatorExamRoom.id" useGeneratedKeys="true">
        insert into invigilator_examroom(invigilator_id, exam_room_id, exam_id, from_time,
                                         end_time, create_time, modify_time)
        values (#{invigilatorExamRoom.invigilatorId}, #{invigilatorExamRoom.examRoomId}, #{invigilatorExamRoom.examId},
                #{invigilatorExamRoom.fromTime}, #{invigilatorExamRoom.endTime}, #{invigilatorExamRoom.createTime},
                #{invigilatorExamRoom.modifyTime})
    </insert>
    <update id="update">
        update invigilator_examroom
        <trim prefix="set" suffixOverrides=",">
            <if test="invigilatorExamRoom.invigilatorId != null">invigilator_id =
                #{invigilatorExamRoom.invigilatorId},
            </if>
            <if test="invigilatorExamRoom.examRoomId != null">exam_room_id = #{invigilatorExamRoom.examRoomId},</if>
            <if test="invigilatorExamRoom.examId != null">exam_id = #{invigilatorExamRoom.examId},</if>
            <if test="invigilatorExamRoom.fromTime != null">from_time = #{invigilatorExamRoom.fromTime},</if>
            <if test="invigilatorExamRoom.endTime != null">end_time = #{invigilatorExamRoom.endTime},</if>
            <if test="invigilatorExamRoom.createTime != null">create_time = #{invigilatorExamRoom.createTime},</if>
            <if test="invigilatorExamRoom.modifyTime != null">modify_time = #{invigilatorExamRoom.modifyTime},</if>
        </trim>
        where id = #{invigilatorExamRoom.id}
    </update>
    <delete id="deleteByExamId">
        delete
        from invigilator_examroom
        where exam_id = #{examId};

    </delete>
    <delete id="deleteByExamIdAndInvigilatorId">
        delete
        from invigilator_examroom
        where invigilator_id = #{invigilatorExamRoom.invigilatorId}
          and exam_id = #{invigilatorExamRoom.examId}
    </delete>
    <delete id="deleteByExamRoomId">
        delete
        from invigilator_examroom
        where exam_room_id = #{id}
    </delete>
    <!--
    namespace:名称空间;指定为接口的全类名
    id：唯一标识
    resultType：返回值类型（接收的bean的全类名比较合适，别名也行）
    #{id}：从传递过来的参数中取出id值

    public Employee getEmpById(Integer id);
     -->


    <select id="getUnAvailableInvigilators" resultType="java.lang.Integer">
        select invigilator_id
        from invigilator_examroom
        where (from_time between #{startTime} and #{endTime}
            and end_time between #{startTime} and #{endTime})
    </select>


    <select id="getInvigilatorsByExamRoomId" resultType="com.sot.iexam.DO.XUser">
        select u.*
        from invigilator_examroom ie,
             x_user u
        where u.id = ie.invigilator_id
          and ie.exam_room_id = #{examRoomId}
    </select>


    <select id="getInvigilatorByExamId" resultType="com.sot.iexam.DO.invigilatorExamRoom">
        select invigilator_id, exam_room_id
        from invigilator_examroom
        where exam_id = #{examId}
    </select>
    <select id="getInvigilatorExamList" resultType="com.sot.iexam.DO.invigilatorExamRoom">
        select id,
        invigilator_id,
        exam_room_id,
        exam_id,
        from_time,
        end_time,
        create_time,
        modify_time
        from invigilator_examroom
        <include refid="invigilatorListWhere"></include>
    </select>
    <select id="getInvigilatorExamListCount" resultType="java.lang.Integer">
        select count(1)
        from invigilator_examroom
        <include refid="invigilatorListWhere"></include>
    </select>
    <resultMap id="roomVo" type="com.sot.iexam.VO.roomVo">
        <result column="exam_room_id" property="examRoomId"/>
        <collection property="xUsers" ofType="com.sot.iexam.DO.XUser" column="xuser">
            <result property="realName" column="real_name"></result>
            <result property="id" column="id"></result>
        </collection>
    </resultMap>
    <select id="getArrangedInvigilator" resultMap="roomVo">
        select invigilatorExamroom.exam_room_id, xuser.*
        from invigilator_examroom invigilatorExamroom,
             x_user xuser
        where xuser.id = invigilatorExamroom.invigilator_id
          and invigilatorExamroom.exam_id = #{invigilatorExamRoom.examId}

    </select>
    <select id="getReviewerExamArrangeCount" resultType="java.lang.Integer">
        select count(1)
        from exam_room
        where exam_id = #{invigilatorExamRoom.examId}
    </select>
    <select id="getInvigilatorInfoById" resultType="com.sot.iexam.DO.XUser">
        select id, real_name
        from x_user
        where id = #{invigilatorId};
    </select>
    <sql id="invigilatorListWhere">
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="invigilatorExamRoom.invigilatorId != null">and invigilator_id =
                #{invigilatorExamRoom.invigilatorId}
            </if>
            <if test="invigilatorExamRoom.examRoomId != null">and exam_room_id = #{invigilatorExamRoom.examRoomId}</if>
            <if test="invigilatorExamRoom.examId != null">and exam_id = #{invigilatorExamRoom.examId}</if>
            <if test="invigilatorExamRoom.fromTime != null">and from_time = #{invigilatorExamRoom.fromTime}</if>
            <if test="invigilatorExamRoom.endTime != null">and end_time = #{invigilatorExamRoom.endTime}</if>
            <if test="invigilatorExamRoom.createTime != null">and create_time = #{invigilatorExamRoom.createTime}</if>
            <if test="invigilatorExamRoom.modifyTime != null">and modify_time = #{invigilatorExamRoom.modifyTime}</if>
        </trim>
    </sql>
    <sql id="invigilatorListWhere2">
        <trim prefix="where" prefixOverrides="and |or ">
            <if test="1 == 1">
            </if>

        </trim>
    </sql>
</mapper>